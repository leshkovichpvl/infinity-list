{"version":3,"file":"CustomScrollBar.js","sourceRoot":"","sources":["../src/CustomScrollBar.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,mEAAqD;AAWrD,IAAM,MAAM,GAAG,UACX,IAAc,EACd,KAA4B,IAC3B,OAAA,IAAI,CAAC,MAAM,CAAC,UAAC,SAAS,EAAE,GAAG;IAAK,OAAA,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,cAAK,SAAS,eAAG,GAAG,IAAG,KAAK,CAAC,GAAG,CAAC,MAAC;;AAArE,CAAqE,EAAE,EAAE,CAAC,EAA1G,CAA0G,CAAC;AAEhH;IAAqC,mCAAqD;IAA1F;;IAmBA,CAAC;IAjBG,gCAAM,GAAN;QACI,IAAM,MAAM,GAAG,MAAM,CAAC,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACpF,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtD,OAAO,oBAAC,oCAAU,eACV,MAAM,IACV,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EACjC,qBAAqB,EAAE,UAAA,KAAK,IAAI,OAAA,wCAAS,KAAK,IAAE,SAAS,EAAC,6BAA6B,IAAE,EAAzD,CAAyD,EACzF,mBAAmB,EAAE,UAAA,KAAK,IAAI,OAAA,wCAAS,KAAK,IAAE,SAAS,EAAC,2BAA2B,IAAE,EAAvD,CAAuD,EACrF,qBAAqB,EAAE,UAAA,KAAK,IAAI,OAAA,wCAAS,KAAK,IAAE,SAAS,EAAC,6BAA6B,IAAE,EAAzD,CAAyD,EACzF,mBAAmB,EAAE,UAAA,KAAK,IAAI,OAAA,wCAAS,KAAK,IAAE,SAAS,EAAC,2BAA2B,IAAE,EAAvD,CAAuD,EACrF,UAAU,EAAE,UAAA,KAAK,IAAI,OAAA,wCAAS,KAAK,IAAE,SAAS,EAAC,iBAAiB,IAAE,EAA7C,CAA6C,KAEjE,IAAI,CAAC,KAAK,CAAC,QAAQ,CACX,CAAA;IACjB,CAAC;IACL,sBAAC;AAAD,CAAC,AAnBD,CAAqC,KAAK,CAAC,aAAa,GAmBvD;AAnBY,0CAAe","sourcesContent":["import * as React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nexport interface ICustomScrollBarProps {\n    width?: number | string;\n    height?: number | string;\n    handleScroll?: (event) => void;\n    autoHeight?: boolean;\n    autoHeightMin?: number | string;\n    autoHeightMax?: number | string;\n}\n\nconst reduce = (\n    keys: string[],\n    props: ICustomScrollBarProps\n) => keys.reduce((newParams, key) => void 0 === props[key] ? newParams : {...newParams, [key]: props[key]}, {});\n\nexport class CustomScrollBar extends React.PureComponent<ICustomScrollBarProps, undefined> {\n\n    render() {\n        const params = reduce(['autoHeight', 'autoHeightMin', 'autoHeightMax'], this.props);\n        const style = reduce(['width', 'height'], this.props);\n\n        return <Scrollbars\n            {...params}\n            style={style}\n            onScroll={this.props.handleScroll}\n            renderTrackHorizontal={props => <div {...props} className=\"scrollbar--track-horizontal\"/>}\n            renderTrackVertical={props => <div {...props} className=\"scrollbar--track-vertical\"/>}\n            renderThumbHorizontal={props => <div {...props} className=\"scrollbar--thumb-horizontal\"/>}\n            renderThumbVertical={props => <div {...props} className=\"scrollbar--thumb-vertical\"/>}\n            renderView={props => <div {...props} className=\"scrollbar--view\"/>}\n        >\n            {this.props.children}\n        </Scrollbars>\n    }\n}\n"]}